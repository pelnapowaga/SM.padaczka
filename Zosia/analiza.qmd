---
title: "SManaliza"
author: Zofia Mikołajczak
format: docx
editor: visual
---

## Przygotowanie bazy danych

```{r}
install.packages("tidyverse")
library(tidyverse) 

library(readr)
KWESTIONARIUSZ_SM <- read_delim("nowe_bazy_danych/KWESTIONARIUSZ_SM.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)

KWESTIONARIUSZ_PADACZKA_SM <- read_delim("nowe_bazy_danych/KWESTIONARIUSZ_PADACZKA- SM.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)

KWESTIONARIUSZ_SM_PADACZKA <- read_delim("nowe_bazy_danych/KWESTIONARIUSZ_SM-PADACZKA.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)



#wybranie zmiennych z baz danych 

SM<-KWESTIONARIUSZ_SM %>% 
  select(wiek, plec, narodowosc,starts_with(c("D","Q"))) %>% 
  mutate(warunek = "SM") %>% 

PA_SM<-KWESTIONARIUSZ_PADACZKA_SM %>% 
  select(wiek, plec, narodowosc,starts_with(c("D","Q"))) %>% 
  mutate(warunek = "PA_SM") 

SM_PA<-KWESTIONARIUSZ_SM_PADACZKA %>% 
  select(wiek, plec, narodowosc,starts_with(c("D","Q"))) %>% 
  mutate(warunek = "SM_PA") 

#stwirzenie caej bazy danych dla SM; uzyskalismy baze danych z 37 zmiennymi dla 509 obserwacji
DF_SM<-rbind(SM, PA_SM, SM_PA)


```

## Porządki

```{r}

DF_SM <-DF_SM %>% 
  filter(plec == "Kobieta" | plec == "Mężczyzna") %>% 
  mutate(wiek = case_when(
    wiek == "14-15 lat" ~ 14,
    wiek == "15-16 lat" ~ 15,
    wiek == "16-17 lat" ~ 16,
    wiek == "17-18 lat" ~ 17,
    wiek == "18-19 lat" ~ 18,
    wiek == "Powyżej 20 lat" ~ 20)) %>% 
  filter(wiek == 14| wiek == 15 | wiek == 16 | wiek == 17 | wiek == 18)

table(DF_SM$wiek)

#wywalamy powyżej 20 rż. 
    
```

## Opis próby

```{r}

#w opisie próby powinniśmy: "tabelka ze średnimi i odchyleniami naszych pomiarów w podziale na test, w podziale na płeć i w podziale na test oraz płeć (nie zapomnieć o raportowaniu N)"

DF_SM %>% 
  group_by(warunek, plec) %>% 
  summarise(N=n())

table(DF_SM$plec)

DF_SM %>% 
  group_by(warunek, D4) %>% 
  summarise(N=n())

DF_SM %>% 
  group_by(warunek) %>% 
  summarise(M = round(mean(wiek),2), SD =  round(sd(wiek),2))

DF_SM %>% 
  summarise(M = round(mean(wiek),2), SD =  round(sd(wiek),2)) 

# w sumie możemy już opisać próbę 

```

## Przekodowanie pytan

```{r}

view(a)

DF_SM_2<-DF_SM %>% 
  mutate(QA1 = ifelse (QA1 == 'Immunologicznego', 1, 0),
         QA2 = ifelse (QA2 == 'Przyczyny stwardnienia rozsianego nie są do końca znane', 1, 0),
         QA3 = ifelse (QA3 == 'Wszystkie powyższe odpowiedzi są poprawne', 1, 0),
         QA4 = ifelse (QA4 == 'Wszystkie powyższe odpowiedzi są poprawne', 1, 0),
         QA5 = ifelse (QA5 == 'PRAWDA', 1, 0),
         QA6 = ifelse (QA6 == 'PRAWDA', 1, 0),
         QA7 = ifelse (QA7 == 'PRAWDA', 1, 0), 
         QA8 = ifelse (QA8 == 'PRAWDA', 1, 0), 
         QA9 = ifelse (QA9 == 'PRAWDA', 1, 0), 
         QA10 = ifelse (QA10 == 'PRAWDA', 1, 0), 
         QA11 = ifelse (QA11 == 'PRAWDA', 1, 0), 
         QA12 = ifelse (QA12 == 'FAŁSZ', 1, 0), 
         QA13 = ifelse (QA13 == 'PRAWDA', 1, 0), 
         QA14 = ifelse (QA14 == 'PRAWDA', 1, 0),
         QB1 = ifelse (QB1 == 'Immunologicznego', 1, 0),
         QB2 = ifelse (QB2 == 'Przyczyny stwardnienia rozsianego nie są do końca znane', 1, 0),
         QB3 = ifelse (QB3 == 'Wszystkie powyższe odpowiedzi są poprawne', 1, 0),
         QB4 = ifelse (QB4 == 'Wszystkie powyższe odpowiedzi są poprawne', 1, 0),
         QB5 = ifelse (QB5 == 'PRAWDA', 1, 0),
         QB6 = ifelse (QB6 == 'PRAWDA', 1, 0),
         QB7 = ifelse (QB7 == 'PRAWDA', 1, 0), 
         QB8 = ifelse (QB8 == 'PRAWDA', 1, 0), 
         QB9 = ifelse (QB9 == 'PRAWDA', 1, 0), 
         QB10 = ifelse (QB10 == 'PRAWDA', 1, 0), 
         QB11 = ifelse (QB11 == 'PRAWDA', 1, 0), 
         QB12 = ifelse (QB12 == 'FAŁSZ', 1, 0), 
         QB13 = ifelse (QB13 == 'PRAWDA', 1, 0), 
         QB14 = ifelse (QB14 == 'PRAWDA', 1, 0)) 


```

## Wyniki dwóch czesci kwestionariusza

```{r}

DF_SM_3 <- DF_SM_2 %>% 
  mutate(SUM_A = 
           DF_SM_2 %>% 
           select(starts_with("QA")) %>% 
           rowSums) %>% 
   mutate(SUM_B = 
           DF_SM_2 %>% 
           select(starts_with("QB")) %>% 
           rowSums) %>% 
  select(-starts_with(c("QA", "QB")))

```

## Rzetelność kwestionariusza

```{r}
install.packages("psych")
library(psych)

alpha(DF_SM_2 %>% 
  select(starts_with("QA")))

# raw_alpha = 0.8730171, dobra rzetelność

alpha(DF_SM_2 %>% 
  select(starts_with("QB")))

# raw_alpha = 0.8271339, dobra rzetelność
```

## Trafność kwestionariusza - EFA

```{r}

library(nFactors)
library(GPArotation)
library(psych)

answers_A <- DF_SM_2 %>% 
  select(starts_with("QA"))

Korelacja <- cor(answers_A,
                 method = "spearman",
                 use = "pairwise.complete.obs")
ev_Dane <- eigen(Korelacja) 
ap_Dane <- parallel(subject=nrow(answers),
                    var=ncol(answers),
                    rep=701, cent=.05) #stałe (rep - liczba repetycji algorytmu)
nS_Dane <- nScree(x = ev_Dane$values, #wartości własne macierzy korelacji 
                  aparallel = ap_Dane$eigen$qevpea) 
plotnScree(nS_Dane)

#macież korelacji
cor_answers_A<-cor(answers_A, method = "spearman")
View(cor_answers_A) 

sum(cor(cor_answers_A)<0.3)/length(cor_answers_A-14)*100 #77% korelacji jest poniżej 0.3
(sum(cor(cor_answers_A)>0.9)-14)/length(cor_answers_A-14)*100 #nie ma żadnej korelacji powyżej 0.9

#wyznacznik macierzy korelacji
det(cor(answers_A)) #0.009155857

#kryterium KMO
KMO(cor(answers_A))

#czy macierz jest macierzą identycznościową
cortest.bartlett(cor(answers_A)) #H0: macierz korelacji jest identycznościowa - dane nie mają ze sobą nic wspólnego; mamy podstawy do orzucenia H0

#właściwa EFA
fit_1<-fa(r = answers_A, nfactors = 2, rotate = "varimax")
print(fit_1)

#powinna byc dla danych tetrachorycznych, ale wtedy nie wychodzi; do przemyslenia 


```

## wykres gęstości wyników: pre-test/re-test + płeć + demografia

```{r}

ggplot_df <- DF_SM_3 %>% 
  select(plec, D4, SUM_A, SUM_B, warunek) %>%
  mutate(A = SUM_A, B = SUM_B) %>% 
  pivot_longer(cols = c(A, B), names_to = "test", values_to = "wynik")

# gęstość całkowika

ggplot(ggplot_df, aes(x = wynik)) + 
  geom_density(aes(color = test)) +
  theme_bw() + 
  theme(legend.position="bottom") + 
  ylab("gęstość") 


# gęstość w podziale na płeć 

ggplot(ggplot_df, aes(x = wynik)) + 
  geom_density(aes(color = test)) +
  theme_bw() + 
  theme(legend.position="bottom") + 
  ylab("gęstość") +
  facet_wrap(vars(plec))

# gęstość w podziale na miejsce zamieszkania

ggplot(ggplot_df, aes(x = wynik)) + 
  geom_density(aes(color = test)) +
  theme_bw() + 
  theme(legend.position="bottom") + 
  ylab("gęstość") +
  facet_wrap(vars(D4))

```

## Przygotowanie danych do testów 

```{r}
#przygotowanie danych 
pivot_df <- DF_SM_3 %>% 
  select(plec, D4, SUM_A, SUM_B, warunek) %>%
  mutate(A = SUM_A, B = SUM_B) %>% 
  pivot_longer(cols = c(A, B), names_to = "test", values_to = "wynik")

view(pivot_df)
str(pivot_df)

```

## Test t dla grup zaleźnych 

``` {r}

hist(pivot_df$wynik)
summary(DF_SM_3$SUM_A)
summary(DF_SM_3$SUM_B)

#dla zmiennej test 

#sprawdzamy homogeniczność wariancji; 
#H0: wariancje są jednorodne - mamy podstawy do odrzucenia
bartlett.test(pivot_df$wynik ~ pivot_df$test)


t.test(pivot_df$test, pivot_df$wynik,
       alternative = "two.sided",
       paired = TRUE,   
       var.equal = TRUE,
       conf.level = 0.95)



#dla zmiennej płeć 
#H0: wariancje są jednorodne - nie mamy podstaw do odrzucenia 

bartlett.test(pivot_df$wynik ~ pivot_df$plec)

t.test(pivot_df$plec, pivot_df$wynik,
       alternative = "two.sided",
       paired = TRUE,   
       var.equal = FALSE,
       conf.level = 0.95)

```

## Modele liniowe 





#two-way ANOVA 
#zmienne niezależne lekcja i płeć
#zmienna zależna wynik testu

ggplot(pivot_df, aes(x = test, y = wynik)) + 
  geom_boxplot(aes(color = plec)) +
  theme_bw() + 
  theme(legend.position="bottom")

#właściwa ANOVA

ANOVA_plec<- aov(wynik ~ test * plec, data = pivot_df)
summary(ANOVA_plec)

#założenia - przeanalizować

shapiro.test(ANOVA_plec$residuals) #rozkłąd błędów jest normalny
plot(ANOVA_plec, which = 1)

#z metodologii wziąć efekt główny, prosty i całkowity 

#two-way ANOVA 
#zmienne niezależne: lekcja i miejsce zamieszkania
#zmienna zależna wynik testu 
ggplot(pivot_df, aes(x = test, y = wynik)) + 
  geom_boxplot(aes(color = D4)) +
  theme_bw() +
  theme(legend.position="bottom")

#włąściwa ANOVA

ANOVA_D4 <- aov(wynik ~ test * D4, data = pivot_df)
summary(ANOVA_D4)

#założenia - przeanalizować

shapiro.test(ANOVA_D4$residuals) #rozkłąd błędów jest normalny
plot(ANOVA_D4, which = 1)
  

#two-way ANOVA 
#zmienne niezależne: lekcja i warunek (czy najpierw odbyła się lekcja SM/PADACZKA, lub bez)
#zmienna zależna wynik testu 
ggplot(pivot_df, aes(x = test, y = wynik)) + 
  geom_boxplot(aes(color = warunek)) +
  theme_bw() +
  theme(legend.position="bottom")

#włąściwa ANOVA

ANOVA_warunek <- aov(wynik ~ test * warunek, data = pivot_df) # warunek nie jest istotny staytsytycznie!
summary(ANOVA_warunek )

#założenia - przeanalizować

shapiro.test(ANOVA_warunek $residuals) #rozkłąd błędów jest normalny
plot(ANOVA_warunek , which = 1)
  

#założenia wszędzie wydają się spełnione (?)
#dla wayniku i płci oraz wyniku i wynik i test powinniśmy zrobić test t 

```

## inne

```{r}
view(DF_SM_3)

hist(DF_SM_3$SUM_A)
hist(DF_SM_3$SUM_B)
table(DF_SM_3$narodowosc) #bez sensu


hist(sqrt(DF_SM_3$SUM_A)) 
hist(log(DF_SM_3$SUM_B + 1)) #ANOVA na skośnej zmiennej zależnej; k-w test

```
