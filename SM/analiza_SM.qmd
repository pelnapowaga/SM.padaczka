---
title: "SManaliza"
author: Zofia Mikołajczak
format: docx
editor: visual
date-modified: 23.08
---

## Pakiety

```{r}
install.packages("lsr")

library(tidyverse) 
library(readr)
library(psych)
library(dplyr)
library(lsr)

```

## Przygotowanie bazy danych

```{r}

KWESTIONARIUSZ_SM <- read_delim("nowe_bazy_danych/KWESTIONARIUSZ_SM.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)

KWESTIONARIUSZ_PADACZKA_SM <- read_delim("nowe_bazy_danych/KWESTIONARIUSZ_PADACZKA- SM.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)

KWESTIONARIUSZ_SM_PADACZKA <- read_delim("nowe_bazy_danych/KWESTIONARIUSZ_SM-PADACZKA.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)



#wybranie zmiennych z baz danych 

SM<-KWESTIONARIUSZ_SM %>% 
  select(wiek, plec, narodowosc,starts_with(c("D","Q"))) %>% 
  mutate(warunek = "SM") 

PA_SM<-KWESTIONARIUSZ_PADACZKA_SM %>% 
  select(wiek, plec, narodowosc,starts_with(c("D","Q"))) %>% 
  mutate(warunek = "PA_SM") 

SM_PA<-KWESTIONARIUSZ_SM_PADACZKA %>% 
  select(wiek, plec, narodowosc,starts_with(c("D","Q"))) %>% 
  mutate(warunek = "SM_PA") 

#stwirzenie caej bazy danych dla SM; uzyskalismy baze danych z 37 zmiennymi dla 509 obserwacji
DF_SM<-rbind(SM, PA_SM, SM_PA)

#509 obserwacji 


```

## Porządki

```{r}

table(DF_SM$wiek)
table(DF_SM$plec)

DF_SM <-DF_SM %>% 
  filter(plec == "Kobieta" | plec == "Mężczyzna") %>% 
  mutate(wiek = case_when(
    wiek == "14-15 lat" ~ 14,
    wiek == "15-16 lat" ~ 15,
    wiek == "16-17 lat" ~ 16,
    wiek == "17-18 lat" ~ 17,
    wiek == "18-19 lat" ~ 18,
    wiek == "Powyżej 20 lat" ~ 20)) %>% 
  filter(wiek == 14| wiek == 15 | wiek == 16 | wiek == 17 | wiek == 18)

table(DF_SM$wiek)

#wywalamy powyżej 20 rż.; zostaje nam 491 obserwacji 
    
```

## Czy ktoś nam strzelał w pytaniach

```{r}

DF_SM %>% 
  mutate(nr = row_number()) %>% 
  filter(D6 == "Nie") %>% 
  filter(D8 == "Tak") 

#wyrzucamy te 3 osoby 

DF_SM <- DF_SM[-c(57,77,346),]
#zostaje nam 488 obserwacji 

```

## Opis próby

```{r}

#w opisie próby powinniśmy: "tabelka ze średnimi i odchyleniami naszych pomiarów w podziale na test, w podziale na płeć i w podziale na test oraz płeć (nie zapomnieć o raportowaniu N)"

DF_SM %>% 
  group_by(warunek, plec) %>% 
  summarise(N=n())

table(DF_SM$plec)

DF_SM %>% 
  group_by( D4) %>% 
  summarise(N=n())

DF_SM %>% 
  group_by(warunek) %>% 
  summarise(M = round(mean(wiek),2), SD =  round(sd(wiek),2))

DF_SM %>% 
  summarise(M = round(mean(wiek),2), SD =  round(sd(wiek),2)) 

# w sumie możemy już opisać próbę 

```

## Przekodowanie pytan

```{r}

view(a)

DF_SM_2<-DF_SM %>% 
  mutate(QA1 = ifelse (QA1 == 'Immunologicznego', 1, 0),
         QA2 = ifelse (QA2 == 'Przyczyny stwardnienia rozsianego nie są do końca znane', 1, 0),
         QA3 = ifelse (QA3 == 'Wszystkie powyższe odpowiedzi są poprawne', 1, 0),
         QA4 = ifelse (QA4 == 'Wszystkie powyższe odpowiedzi są poprawne', 1, 0),
         QA5 = ifelse (QA5 == 'PRAWDA', 1, 0),
         QA6 = ifelse (QA6 == 'PRAWDA', 1, 0),
         QA7 = ifelse (QA7 == 'PRAWDA', 1, 0), 
         QA8 = ifelse (QA8 == 'PRAWDA', 1, 0), 
         QA9 = ifelse (QA9 == 'PRAWDA', 1, 0), 
         QA10 = ifelse (QA10 == 'PRAWDA', 1, 0), 
         QA11 = ifelse (QA11 == 'PRAWDA', 1, 0), 
         QA12 = ifelse (QA12 == 'FAŁSZ', 1, 0), 
         QA13 = ifelse (QA13 == 'PRAWDA', 1, 0), 
         QA14 = ifelse (QA14 == 'PRAWDA', 1, 0),
         QB1 = ifelse (QB1 == 'Immunologicznego', 1, 0),
         QB2 = ifelse (QB2 == 'Przyczyny stwardnienia rozsianego nie są do końca znane', 1, 0),
         QB3 = ifelse (QB3 == 'Wszystkie powyższe odpowiedzi są poprawne', 1, 0),
         QB4 = ifelse (QB4 == 'Wszystkie powyższe odpowiedzi są poprawne', 1, 0),
         QB5 = ifelse (QB5 == 'PRAWDA', 1, 0),
         QB6 = ifelse (QB6 == 'PRAWDA', 1, 0),
         QB7 = ifelse (QB7 == 'PRAWDA', 1, 0), 
         QB8 = ifelse (QB8 == 'PRAWDA', 1, 0), 
         QB9 = ifelse (QB9 == 'PRAWDA', 1, 0), 
         QB10 = ifelse (QB10 == 'PRAWDA', 1, 0), 
         QB11 = ifelse (QB11 == 'PRAWDA', 1, 0), 
         QB12 = ifelse (QB12 == 'FAŁSZ', 1, 0), 
         QB13 = ifelse (QB13 == 'PRAWDA', 1, 0), 
         QB14 = ifelse (QB14 == 'PRAWDA', 1, 0)) 


```

## Wyniki dwóch czesci kwestionariusza

```{r}

DF_SM_3 <- DF_SM_2 %>% 
  mutate(SUM_A = 
           DF_SM_2 %>% 
           select(starts_with("QA")) %>% 
           rowSums) %>% 
   mutate(SUM_B = 
           DF_SM_2 %>% 
           select(starts_with("QB")) %>% 
           rowSums) %>% 
  select(-starts_with(c("QA", "QB")))

```

## Zmienna D7

```{r}

install.packages("stringr")
library(stringr)

DF_SM_D7 <- DF_SM %>%
  filter(str_detect(D7, "Internet| Szkoła | Rodzina | Znajomi"))

DF_SM_D7 <- DF_SM_3 %>% 
  mutate(D7_internet = str_detect(D7,"Internet"), 
         D7_szkola = str_detect(D7,"Szkoła"), 
         D7_rodzina = str_detect(D7, "Rodzina"), 
         D7_inne = str_detect(D7, "Inne"), 
         D7_znajomi = str_detect(D7, "Znajomi"))


# test t na wynikach osób true/false
# conajmniej 30 osób

internet <- DF_SM_D7 %>% 
  filter(D7_internet) %>% 
  select(SUM_A) %>% 
  mutate(zrodlo = "Internet")

szkola <- DF_SM_D7 %>% 
  filter(D7_szkola) %>% 
  select(SUM_A) %>% 
  mutate(zrodlo = "Szkoła")

rodzina <- DF_SM_D7 %>% 
  filter(D7_rodzina) %>% 
  select(SUM_A) %>% 
  mutate(zrodlo = "Rodzina")

inne <- DF_SM_D7 %>% 
  filter(D7_inne) %>% 
  select(SUM_A) %>% 
  mutate(zrodlo = "Inne")

znajomi <- DF_SM_D7 %>% 
  filter(D7_znajomi) %>% 
  select(SUM_A) %>% 
  mutate(zrodlo = "Znajomi")


D7<- bind_rows(internet, szkola, rodzina, inne, znajomi)

# i teraz ANOVA + post hoc

```

## Rzetelność kwestionariusza

```{r}

alpha(DF_SM_2 %>% 
  select(starts_with("QA"))) 

# raw_alpha = 0.8730171, dobra rzetelność

alpha(DF_SM_2 %>% 
  select(starts_with("QB")))

# raw_alpha = 0.8271339, dobra rzetelność

alph
```

## Rzetelność kwestionariusza - EFA

```{r}

library(nFactors)
library(GPArotation)
library(psych)

answers_A <- DF_SM_2 %>% 
  select(starts_with("QA"))

Korelacja <- cor(answers_A,
                 method = "spearman",
                 use = "pairwise.complete.obs")
ev_Dane <- eigen(Korelacja) 
ap_Dane <- parallel(subject=nrow(answers),
                    var=ncol(answers),
                    rep=701, cent=.05) #stałe (rep - liczba repetycji algorytmu)
nS_Dane <- nScree(x = ev_Dane$values, #wartości własne macierzy korelacji 
                  aparallel = ap_Dane$eigen$qevpea) 
plotnScree(nS_Dane)

#macież korelacji
cor_answers_A<-cor(answers_A, method = "spearman")
View(cor_answers_A) 

sum(cor(cor_answers_A)<0.3)/length(cor_answers_A-14)*100 #77% korelacji jest poniżej 0.3
(sum(cor(cor_answers_A)>0.9)-14)/length(cor_answers_A-14)*100 #nie ma żadnej korelacji powyżej 0.9

#wyznacznik macierzy korelacji
det(cor(answers_A)) #0.009155857

#kryterium KMO
KMO(cor(answers_A))

#czy macierz jest macierzą identycznościową
cortest.bartlett(cor(answers_A)) #H0: macierz korelacji jest identycznościowa - dane nie mają ze sobą nic wspólnego; mamy podstawy do orzucenia H0

#właściwa EFA
fit_1<-fa(r = answers_A, nfactors = 1, rotate = "varimax", cor = "tet")
print(fit_1)

# powinna byc dla danych tetrachorycznych, ale wtedy nie wychodzi; do przemyslenia 
# jest sens badać jeden wynik 
# ile wyszło czynników + dodajemy ładunki czynnikowe
# model 1 czynnikowy jest gorzej doapsowany niż 2
# w załączniku


```

## Wykres gęstości wyników: pre-test/re-test + płeć + demografia

```{r}

ggplot_df <- DF_SM_3 %>% 
  select(plec, D4, SUM_A, SUM_B, warunek) %>%
  mutate(A = SUM_A, B = SUM_B) %>% 
  pivot_longer(cols = c(A, B), names_to = "test", values_to = "wynik")

# gęstość całkowika

ggplot(ggplot_df, aes(x = wynik)) + 
  geom_density(aes(color = test)) +
  theme_bw() + 
  theme(legend.position="bottom") + 
  ylab("gęstość") 


# gęstość w podziale na płeć 

ggplot(ggplot_df, aes(x = wynik)) + 
  geom_density(aes(color = test)) +
  theme_bw() + 
  theme(legend.position="bottom") + 
  ylab("gęstość") +
  facet_wrap(vars(plec))

# gęstość w podziale na miejsce zamieszkania

ggplot(ggplot_df, aes(x = wynik)) + 
  geom_density(aes(color = test)) +
  theme_bw() + 
  theme(legend.position="bottom") + 
  ylab("gęstość") +
  facet_wrap(vars(D4))

```

## Przygotowanie danych do testów: test t i modele liniowe

```{r}
#przygotowanie danych 
pivot_df <- DF_SM_3 %>% 
  select(plec, D4, SUM_A, SUM_B, warunek, D5, D9) %>%
  mutate(A = SUM_A, B = SUM_B) %>% 
  pivot_longer(cols = c(A, B), names_to = "test", values_to = "wynik") 

view(pivot_df)
str(pivot_df)
```

## Test t

```{r}

hist(pivot_df$wynik)
summary(DF_SM_3$SUM_A)
summary(DF_SM_3$SUM_B)

#dla zmiennej test - t.test dla prób zależnych


pivot_df_testA <- pivot_df %>% 
  filter(test == "A")

pivot_df_testB <- pivot_df %>% 
  filter(test == "B")

#sprawdzamy homogeniczność wariancji; 
#H0: wariancje są homogeniczne - mamy podstawy do odrzucenia - wariancje są heterogeniczne

var.test(pivot_df_testA$wynik, pivot_df_testB$wynik)

test_pelc <- t.test(pivot_df_testA$wynik, pivot_df_testB$wynik,
       paired = TRUE,   
       var.equal = FALSE,
       conf.level = 0.95)

cohensD(pivot_df_testA$wynik, pivot_df_testB$wynik) ##

#d cohena - doliczyć i zaraportować


#dla zmiennej płeć - t.test dla zmiennych niezależnych

pivot_df_plec_m <- pivot_df %>% 
  filter(plec == "Mężczyzna")

pivot_df_plec_k <- pivot_df %>% 
  filter(plec == "Kobieta")


#H0: wariancje są homogeniczne - nie mamy podstaw do odrzucenia = wariancje są homogeniczne

var.test(pivot_df_plec_m$wynik, pivot_df_plec_k$wynik)


t.test(pivot_df_plec_m$wynik, pivot_df_plec_k$wynik,
       paired = FALSE,   
       var.equal = TRUE,
       conf.level = 0.95)

#dla zmiennej D5 - t.test dla prób niezależnych

table(pivot_df$D5)

pivot_df_D5i <- pivot_df %>% 
  filter(D5 == "Inny")

pivot_df_D5b <- pivot_df %>% 
  filter(D5 == "Z rozszerzoną biologią")


var.test(pivot_df_D5b$wynik, pivot_df_D5i$wynik)
#mamy podstawy do odrzucenia hipotezy zerowej == wariancje są heterogeniczne

t.test(pivot_df_D5b$wynik, pivot_df_D5i$wynik,
       paired = FALSE,   
       var.equal = FALSE,
       conf.level = 0.95)

#nieistotne
#ile osób jest w grupach 

nrow(pivot_df_D5b) 
```

## Modele liniowe

```{r}

#pkt 3 

#model1
DF_SM_4 <- DF_SM_3 %>% 
  mutate(wiedza = SUM_B - SUM_A)


mod1 <- lm(wiedza ~ D4, data = DF_SM_4)
summary(mod1)

plot(mod1, which = 1)
plot(mod1, which = 2)
plot(mod1, which = 3)


#model 2
table(DF_SM_4$D9)

mod2 <- lm(wiedza ~ D9, data = DF_SM_4)
summary(mod2)

plot(mod2, which = 1)
plot(mod2, which = 2)
plot(mod2, which = 3)

ggplot(DF_SM_4, aes(x = D9, y = wiedza)) +
  geom_boxplot() +
  theme_bw()

#ostatecznie wychodzi nam, że miejcsce zamieszkania nie ma znaczenia; jest różnica w zależności od poziomu wiedzy przed lekcją - i założenia do tego modelu są spełnjione; wszystko śmiga

#kat "dobra" nie istotnie różni się od kat "bardzo dobra"

# estimate, std error, intercepr = wyraz wolny; statystyka f i jej p-value; r2

#pkt 1 


```

## Modele liniowe dla SUM_A

```{r}
#pkt 1


#model 3
mod3 <- lm(SUM_A ~ D4, data = DF_SM_4)
summary(mod3)

plot(mod3, which = 1)
plot(mod3, which = 2)
plot(mod3, which = 3)


#model 2
table(DF_SM_4$D9)

mod4 <- lm(SUM_A ~ D9, data = DF_SM_4)
summary(mod4)

plot(mod4, which = 1)
plot(mod4, which = 2)
plot(mod4, which = 3)
```

## ANOVA dla zmiennej D7

```{r}

aov_1 <- aov(SUM_A ~ zrodlo, data = D7)
summary(aov_1)

#ANOVA jest nieistotna statystycznie

plot(aov_1)

# wykresy są w porządku; mamy zachowane założenie o liniowosci oraz normalności; wariancje błędów też są w porządku
# ale sam model jest nieistotny statystycznie


# box plot

ggplot(D7, aes(x = zrodlo, y = SUM_A)) +
  geom_boxplot() + 
  theme_bw() +
  xlab("Deklarowane źródło wiedzy") +
  ylab("Wynik testu przed prezentacją")

```

## ANOVA dla warunków

```{r}
aov_2<-aov(SUM_A ~ warunek, data = DF_SM_3)
summary(aov_2)

#równiż nie istotna statystycznue

plot(aov_2)

#mamy zaburzoną normalność 

ggplot(DF_SM_3, aes(x = warunek, y = SUM_A)) +
  geom_boxplot() + 
  theme_bw() +
  xlab("Warunek") +
  ylab("Wynik testu przed prezentacją")

```
